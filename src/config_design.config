%% Cloudant_benchmark config changes design review 

%% ----------------------------------------------------------------------------
%% PER-OPERATIONS CONFIGURATION: https://github.com/cloudant/perf/issues/23 and 29
%% ----------------------------------------------------------------------------
%%
%% ALTERNATIVE - Support single item OR named Lists of key_generators and value_generators

{key_generators,[
   {crud_documents,  {int_to_str, {partitioned_sequential_int, 100000}}},
   {query_terms,     {int_to_str, {partitioned_sequential_int, 200}}},
   {bulk_operations, {int_to_str, {uniform_int, 123456789}}},
  ]}.

%% IMPLEMENTATION
%% basho_bench_worker:init - turn into named list and push into process environment
%%
%% Driver - new/1 - lookup key_generators by name and store into local DriverState for run access
%% run/4 - ignore KeyGen/ValGen in favor of stored values in DriverState OR can retrieve by name from env

%% ----------------------------------------------------------------------------
%% WORKER_GROUP SUPPORT: https://github.com/cloudant/perf/issues/32
%% ----------------------------------------------------------------------------
%%
%% "worker_types" would provide per-worker config list,
%%     miniature copy of current config file for what is different from global

{worker_types, [
   %% Each worker_type can have its own list of config options
   %%     to be used on top of global parameters known to basho_bench_config
   {worker_name_a, [ {driver, cb_driver}, 
                     {operations, [
                         {get,1},
                         {put,1, [ {configKey1, value}, ... ]}
                         ]},
                     {other, 1}
                   ]},
   {worker_name_b, []}
   ]}.

{workers, [
   {worker_name_a, 1},
   {worker_name_b, 3}
   ]}.

%% IMPLEMENTATION:
%% The "concurrent" property picks how many workers but use workers weights for proportions needed. 
%%
%% basho_bench_worker_config:next_worker 
%%    pops worker_name off weighted list based on "workers" proportions
%%
%% basho_bench_worker:init 
%%    if next_worker is defined then 
%%        looks up worker type to get per-worker-type config as LocalConfig
%%        uses config_get(Key, LocalConfig) for initialization
%%        stores LocalConfig into state for future use
%%        benchmark applications can use config_get and then save values into own driverState
%% 
%% basho_bench_worker:config_get(Key,Default,LocalConfig) 
%%    checks LocalConfig first then uses basho_bench_config:get for global defaults
%%
%% ISSUES
%% 1. Some parms (source_dir, pre/post_hook, etc) and funs like log_dimensions may need more thought
%%    to handle worker_types since these are currently handled outside basho_bench_worker.
%%    May end up with list of pre- and post-hooks to run across multiple drivers, etc. 
%%
%% Pre- and Post-hook should be accept individual values OR lists of hook functions to call
%% OR we could automatically try calling standard per-driver pre and post-hook functions so end users
%% doesnt have to think about it

%% ----------------------------------------------------------------------------
%% SETUP/TEARDOWN: https://github.com/cloudant/perf/issues/35
%% ----------------------------------------------------------------------------
%%
%% Existing code already tries to call a "terminate" function
%%    which is not documented or used in existing drivers
%%
%%     %% Give the driver a chance to cleanup
%%    (catch (State#state.driver):terminate({'EXIT', Reason}, State#state.driver_state)),
%%
%% Current proposal:
%%    Make use of existing new() and terminate() functions for per-worker setUp/tearDown for now
